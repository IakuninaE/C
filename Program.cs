//Функция, проверяющая является ли слово палиндромом.

static string Palindrom(string phrase)
{
    var n = phrase.Length; // сохраняем длину введённого текста

    // проверка, ввели ли хоть что-то 

    if (n == 0)
        return "Некорректный ввод: строка не содержит текст.";

    // проверка на пробелы/знаки препинания/другие символы, которые можно не учитывать, перед текстом;
    // цифры не учитываются, как побочные символы

    var i = 0;
    while ((i < n) && !Char.IsLetter(phrase[i]) && !Char.IsNumber(phrase[i]))
        i++;

    // проверка, что не вся строка состоит из побочных символов

    if (i == n)
        return "Некорректный ввод: строка не содержит текст.";

    // проверка на пробелы/знаки препинания/другие символы, которые можно не учитывать, после текста;

    var k = n - 1;
    while (!Char.IsLetter(phrase[k]) && !Char.IsNumber(phrase[k]))
        k--;

    // проверка, что текст без побочных символов перед и после имеет хотя бы длину 3, 
    // иначе бессмысленно проверять его на палиндром

    if ((k + 1 - i) < 3)
        return "Некорректный ввод: слишком короткий текст.";

    // понижаем регистр, чтобы буквы могли корректно сравниться в случае наличия одновременно 
    // букв в верхнем и нижнем регистрах

    phrase = phrase.ToLower();

    // создаётся список, в который будут записываться поэлементно буквы из текста

    List<char> letters = new List<char>();

    // создаём цикл по тексту, не содержащему побочных символов
    // если в тексте есть цифра, текст считается некорректным
    // все буквы записываются в список letter, другие символы опускаются

    for (var j = i; j < k + 1; j++)
    {
        if (Char.IsNumber(phrase[j]))
            return "Некорректный ввод: строка содержит цифры.";

        if (Char.IsLetter(phrase[j]))
        {
            letters.Add(phrase[j]);
        }
    }

    var l = letters.Count; // сохраняем длину получившегося списка
    i = 0;

    // проверяем текст на палиндром, сравнивая буквы, сохранённые в списке letters
    // сравниваем нулевой элемент списка с последним, первый с предпоследним и т.д.

    while (i < (l / 2))
    {
        if (letters[i] != letters[l - 1 - i])
            return "Введённый текст не является палиндромом";
        i++;
    }
    return "Введённый текст является палиндромом";
}

// с консоли вводится текст, который проверяется на то, палиндром это или нет

Console.Write("Введите текст: ");
var phrase = Console.ReadLine();
var answer = Palindrom(phrase);
Console.WriteLine(answer);

// необязательный цикл, который просто будет всё время предлагать ввести текст, пока он не будет корректным для 
// функции проверки палиндрома

while ((answer != "Введённый текст не является палиндромом") & (answer != "Введённый текст является палиндромом"))
{
    Console.WriteLine();
    Console.Write("Введите текст: ");
    phrase = Console.ReadLine();
    answer = Palindrom(phrase);
    Console.WriteLine(answer);
}
